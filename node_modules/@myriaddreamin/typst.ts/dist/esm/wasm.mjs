/**
 * @internal
 */
const once = (fn) => {
    let called = false;
    let res;
    return () => {
        if (called) {
            return res;
        }
        called = true;
        return (res = fn());
    };
};
/** @internal */
export class LazyWasmModule {
    wasmBin;
    initOnce;
    constructor(initFn) {
        if (typeof initFn !== 'function') {
            throw new Error('initFn is not a function');
        }
        this.initOnce = once(async () => {
            await initFn(this.wasmBin);
        });
    }
    async init(module) {
        this.wasmBin = module;
        await this.initOnce();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FzbS5tanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvd2FzbS5tdHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0E7O0dBRUc7QUFDSCxNQUFNLElBQUksR0FBRyxDQUFnQixFQUFXLEVBQUUsRUFBRTtJQUMxQyxJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDbkIsSUFBSSxHQUFNLENBQUM7SUFDWCxPQUFPLEdBQUcsRUFBRTtRQUNWLElBQUksTUFBTSxFQUFFLENBQUM7WUFDWCxPQUFPLEdBQUcsQ0FBQztRQUNiLENBQUM7UUFDRCxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ2QsT0FBTyxDQUFDLEdBQUcsR0FBRyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3RCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUtGLGdCQUFnQjtBQUNoQixNQUFNLE9BQU8sY0FBYztJQUNqQixPQUFPLENBQXNCO0lBQzdCLFFBQVEsQ0FBc0I7SUFFdEMsWUFBWSxNQUF3RDtRQUNsRSxJQUFJLE9BQU8sTUFBTSxLQUFLLFVBQVUsRUFBRSxDQUFDO1lBQ2pDLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztRQUM5QyxDQUFDO1FBRUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxJQUFJLEVBQUU7WUFDOUIsTUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQzdCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBNkQ7UUFDdEUsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7UUFDdEIsTUFBTSxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDeEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFRoZSByZWZlcmVuY2Ugb2YgYSBXZWJBc3NlbWJseSBtb2R1bGUgd2hpY2ggaXMgY29waWVkIGZyb20gdGhlIHdhc20tYmluZGdlblxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ydXN0d2FzbS93YXNtLWJpbmRnZW4vYmxvYi8yYzYyMjcxNWM5ZTY2MDJmN2JiMzc3ODI4YzcyZjc5NTNiMTc4ZWQ3L2NyYXRlcy9jbGktc3VwcG9ydC9zcmMvanMvbW9kLnJzI0w2NTZcclxuICpcclxuICogWW91ciBtb3N0IGNvbW1vbiB1c2UgY2FzZSB3aWxsIGJlIHRvIHBhc3MgYSBVUkwgdG8gYSB3YXNtIGZpbGUgaGVyZS5cclxuICogKyBgV2ViQXNzZW1ibHkuTW9kdWxlYCAtIEFuIGluc3RhbnRpYXRlZCB3YXNtIG1vZHVsZS5cclxuICogKyBgVVJMYCAtIFJlbW90ZSB1cmwgdG8gYSB3YXNtIGZpbGVcclxuICogKyBgQnVmZmVyU291cmNlYCAtIEFuIEFycmF5QnVmZmVyVmlldyBvciBhbiBBcnJheUJ1ZmZlclxyXG4gKi9cclxuZXhwb3J0IHR5cGUgV2ViQXNzZW1ibHlNb2R1bGVSZWYgPSBSZXF1ZXN0SW5mbyB8IFVSTCB8IFJlc3BvbnNlIHwgQnVmZmVyU291cmNlIHwgV2ViQXNzZW1ibHkuTW9kdWxlO1xyXG5cclxuLyoqXHJcbiAqIEBpbnRlcm5hbFxyXG4gKi9cclxuY29uc3Qgb25jZSA9IDxUIGV4dGVuZHMgYW55PihmbjogKCkgPT4gVCkgPT4ge1xyXG4gIGxldCBjYWxsZWQgPSBmYWxzZTtcclxuICBsZXQgcmVzOiBUO1xyXG4gIHJldHVybiAoKSA9PiB7XHJcbiAgICBpZiAoY2FsbGVkKSB7XHJcbiAgICAgIHJldHVybiByZXM7XHJcbiAgICB9XHJcbiAgICBjYWxsZWQgPSB0cnVlO1xyXG4gICAgcmV0dXJuIChyZXMgPSBmbigpKTtcclxuICB9O1xyXG59O1xyXG5cclxuLyoqIEBpbnRlcm5hbCBjb3BpZWQgZnJvbSB3YXNtLWJpbmRnZW4gKi9cclxudHlwZSBXYXNtTW9kdWxlSW5pdFBhcmFtID0gV2ViQXNzZW1ibHlNb2R1bGVSZWYgfCBQcm9taXNlPFdlYkFzc2VtYmx5TW9kdWxlUmVmPiB8IHVuZGVmaW5lZDtcclxuXHJcbi8qKiBAaW50ZXJuYWwgKi9cclxuZXhwb3J0IGNsYXNzIExhenlXYXNtTW9kdWxlIHtcclxuICBwcml2YXRlIHdhc21CaW46IFdhc21Nb2R1bGVJbml0UGFyYW07XHJcbiAgcHJpdmF0ZSBpbml0T25jZTogKCkgPT4gUHJvbWlzZTx2b2lkPjtcclxuXHJcbiAgY29uc3RydWN0b3IoaW5pdEZuOiAocGFyYW06IFdhc21Nb2R1bGVJbml0UGFyYW0pID0+IFByb21pc2U8dW5rbm93bj4pIHtcclxuICAgIGlmICh0eXBlb2YgaW5pdEZuICE9PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW5pdEZuIGlzIG5vdCBhIGZ1bmN0aW9uJyk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5pbml0T25jZSA9IG9uY2UoYXN5bmMgKCkgPT4ge1xyXG4gICAgICBhd2FpdCBpbml0Rm4odGhpcy53YXNtQmluKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgaW5pdChtb2R1bGU/OiBXZWJBc3NlbWJseU1vZHVsZVJlZiB8IFByb21pc2U8V2ViQXNzZW1ibHlNb2R1bGVSZWY+KSB7XHJcbiAgICB0aGlzLndhc21CaW4gPSBtb2R1bGU7XHJcbiAgICBhd2FpdCB0aGlzLmluaXRPbmNlKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==