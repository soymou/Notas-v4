var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var stdin_exports = {};
__export(stdin_exports, {
  NodeFetchPackageRegistry: () => NodeFetchPackageRegistry
});
module.exports = __toCommonJS(stdin_exports);
var import_package = require("./package.cjs");
class NodeFetchPackageRegistry extends import_package.FetchPackageRegistry {
  request;
  constructor(am, request) {
    super(am);
    this.request = request;
  }
  pullPackageData(path) {
    const response = this.request("GET", this.resolvePath(path));
    if (response.statusCode === 200) {
      return response.getBody(void 0);
    }
    return void 0;
  }
}
